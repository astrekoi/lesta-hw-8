---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
    positions:
      filename: /tmp/positions.yaml
    clients:
      - url: http://loki:3100/loki/api/v1/push
    scrape_configs:
      # ИСПРАВЛЕННАЯ конфигурация с правильным парсингом
      - job_name: lesta-app-logs
        static_configs:
          - targets: [localhost]
            labels:
              job: lesta-app-logs
              app: lesta-app
              source: kubernetes
              # БОЛЕЕ ТОЧНЫЙ путь
              __path__: /var/log/pods/default_lesta-app-*/app/0.log
        pipeline_stages:
          # Парсинг Docker JSON формата
          - json:
              expressions:
                log: log
                stream: stream
                time: time
          # Парсинг вложенного JSON из приложения
          - json:
              expressions:
                timestamp: time
                level: level
                message: msg
                request_info: request
                response_info: response
              source: log
          # Установка временной метки
          - timestamp:
              source: time
              format: RFC3339Nano
          # Добавление динамических меток
          - labels:
              stream:
              level:
          # Вывод основного содержимого
          - output:
              source: log
          
      # РЕЗЕРВНАЯ конфигурация для отладки  
      - job_name: lesta-app-backup
        static_configs:
          - targets: [localhost]
            labels:
              job: lesta-app-backup
              app: lesta-app
              __path__: /var/log/containers/*lesta-app*.log
        pipeline_stages:
          # Простой парсинг для контейнерных логов
          - regex:
              expression: '^(?P<timestamp>\S+) (?P<stream>stdout|stderr) \S+ (?P<content>.*)$'
          - timestamp:
              source: timestamp
              format: RFC3339Nano
          - output:
              source: content
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail
subjects:
- kind: ServiceAccount
  name: promtail
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      serviceAccountName: promtail
      containers:
      - name: promtail
        image: grafana/promtail:2.9.4
        args:
        - -config.file=/etc/promtail/promtail.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/promtail
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: promtail-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
